{"ast":null,"code":"import _regeneratorRuntime from\"E:/foodiespaw/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"E:/foodiespaw/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{toast}from'react-toastify';import axios from'axios';export var uploadImage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var toastId,image,formData,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:toastId=null;_context.next=3;return getImage(event);case 3:image=_context.sent;if(image){_context.next=6;break;}return _context.abrupt(\"return\",null);case 6:formData=new FormData();formData.append('image',image,image.name);_context.next=10;return axios.post('api/upload',formData,{onUploadProgress:function onUploadProgress(_ref2){var progress=_ref2.progress;if(toastId)toast.update(toastId,{progress:progress});else toastId=toast.success('Uploading...',{progress:progress});}});case 10:response=_context.sent;toast.dismiss(toastId);return _context.abrupt(\"return\",response.data.imageUrl);case 13:case\"end\":return _context.stop();}},_callee);}));return function uploadImage(_x){return _ref.apply(this,arguments);};}();var getImage=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event){var files,file;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:files=event.target.files;if(!(!files||files.length<=0)){_context2.next=4;break;}toast.warning('Upload file is nott selected!','File Upload');return _context2.abrupt(\"return\",null);case 4:file=files[0];if(!(file.type!=='image/jpeg')){_context2.next=8;break;}toast.error('Only JPG type is allowed','File Type Error');return _context2.abrupt(\"return\",null);case 8:return _context2.abrupt(\"return\",file);case 9:case\"end\":return _context2.stop();}},_callee2);}));return function getImage(_x2){return _ref3.apply(this,arguments);};}();","map":{"version":3,"names":["toast","axios","uploadImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","toastId","image","formData","response","wrap","_callee$","_context","prev","next","getImage","sent","abrupt","FormData","append","name","post","onUploadProgress","_ref2","progress","update","success","dismiss","data","imageUrl","stop","_x","apply","arguments","_ref3","_callee2","files","file","_callee2$","_context2","target","length","warning","type","error","_x2"],"sources":["E:/foodiespaw/frontend/src/services/uploadService.js"],"sourcesContent":["import { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nexport const uploadImage = async event => {\r\n  let toastId = null;\r\n\r\n  const image = await getImage(event);\r\n  if (!image) return null;\r\n\r\n  const formData = new FormData();\r\n  formData.append('image', image, image.name);\r\n  const response = await axios.post('api/upload', formData, {\r\n    onUploadProgress: ({ progress }) => {\r\n      if (toastId) toast.update(toastId, { progress });\r\n      else toastId = toast.success('Uploading...', { progress });\r\n    },\r\n  });\r\n  toast.dismiss(toastId);\r\n  return response.data.imageUrl;\r\n};\r\n\r\nconst getImage = async event => {\r\n  const files = event.target.files;\r\n\r\n  if (!files || files.length <= 0) {\r\n    toast.warning('Upload file is nott selected!', 'File Upload');\r\n    return null;\r\n  }\r\n\r\n  const file = files[0];\r\n\r\n  if (file.type !== 'image/jpeg') {\r\n    toast.error('Only JPG type is allowed', 'File Type Error');\r\n    return null;\r\n  }\r\n\r\n  return file;\r\n};\r\n"],"mappings":"wOAAA,OAASA,KAAK,KAAQ,gBAAgB,CACtC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,MAAO,IAAM,CAAAC,WAAW,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAMC,KAAK,MAAAC,OAAA,CAAAC,KAAA,CAAAC,QAAA,CAAAC,QAAA,QAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAChCR,OAAO,CAAG,IAAI,CAAAM,QAAA,CAAAE,IAAA,SAEE,CAAAC,QAAQ,CAACV,KAAK,CAAC,QAA7BE,KAAK,CAAAK,QAAA,CAAAI,IAAA,IACNT,KAAK,EAAAK,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAK,MAAA,UAAS,IAAI,SAEjBT,QAAQ,CAAG,GAAI,CAAAU,QAAQ,EAAE,CAC/BV,QAAQ,CAACW,MAAM,CAAC,OAAO,CAAEZ,KAAK,CAAEA,KAAK,CAACa,IAAI,CAAC,CAACR,QAAA,CAAAE,IAAA,UACrB,CAAAhB,KAAK,CAACuB,IAAI,CAAC,YAAY,CAAEb,QAAQ,CAAE,CACxDc,gBAAgB,CAAE,SAAAA,iBAAAC,KAAA,CAAkB,IAAf,CAAAC,QAAQ,CAAAD,KAAA,CAARC,QAAQ,CAC3B,GAAIlB,OAAO,CAAET,KAAK,CAAC4B,MAAM,CAACnB,OAAO,CAAE,CAAEkB,QAAQ,CAARA,QAAS,CAAC,CAAC,CAAC,IAC5C,CAAAlB,OAAO,CAAGT,KAAK,CAAC6B,OAAO,CAAC,cAAc,CAAE,CAAEF,QAAQ,CAARA,QAAS,CAAC,CAAC,CAC5D,CACF,CAAC,CAAC,SALIf,QAAQ,CAAAG,QAAA,CAAAI,IAAA,CAMdnB,KAAK,CAAC8B,OAAO,CAACrB,OAAO,CAAC,CAAC,OAAAM,QAAA,CAAAK,MAAA,UAChBR,QAAQ,CAACmB,IAAI,CAACC,QAAQ,2BAAAjB,QAAA,CAAAkB,IAAA,MAAA1B,OAAA,GAC9B,kBAhBY,CAAAL,WAAWA,CAAAgC,EAAA,SAAA/B,IAAA,CAAAgC,KAAA,MAAAC,SAAA,OAgBvB,CAED,GAAM,CAAAlB,QAAQ,6BAAAmB,KAAA,CAAAjC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAgC,SAAM9B,KAAK,MAAA+B,KAAA,CAAAC,IAAA,QAAAnC,mBAAA,GAAAQ,IAAA,UAAA4B,UAAAC,SAAA,iBAAAA,SAAA,CAAA1B,IAAA,CAAA0B,SAAA,CAAAzB,IAAA,SACpBsB,KAAK,CAAG/B,KAAK,CAACmC,MAAM,CAACJ,KAAK,MAE5B,CAACA,KAAK,EAAIA,KAAK,CAACK,MAAM,EAAI,CAAC,GAAAF,SAAA,CAAAzB,IAAA,UAC7BjB,KAAK,CAAC6C,OAAO,CAAC,+BAA+B,CAAE,aAAa,CAAC,CAAC,OAAAH,SAAA,CAAAtB,MAAA,UACvD,IAAI,SAGPoB,IAAI,CAAGD,KAAK,CAAC,CAAC,CAAC,MAEjBC,IAAI,CAACM,IAAI,GAAK,YAAY,GAAAJ,SAAA,CAAAzB,IAAA,UAC5BjB,KAAK,CAAC+C,KAAK,CAAC,0BAA0B,CAAE,iBAAiB,CAAC,CAAC,OAAAL,SAAA,CAAAtB,MAAA,UACpD,IAAI,gBAAAsB,SAAA,CAAAtB,MAAA,UAGNoB,IAAI,0BAAAE,SAAA,CAAAT,IAAA,MAAAK,QAAA,GACZ,kBAhBK,CAAApB,QAAQA,CAAA8B,GAAA,SAAAX,KAAA,CAAAF,KAAA,MAAAC,SAAA,OAgBb"},"metadata":{},"sourceType":"module","externalDependencies":[]}