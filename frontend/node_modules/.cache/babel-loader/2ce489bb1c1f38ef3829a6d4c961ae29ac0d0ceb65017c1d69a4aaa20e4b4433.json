{"ast":null,"code":"import{useState,createContext,useContext}from'react';import*as userService from'../services/userService';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(userService.getUser());const login=async(email,password)=>{try{const user=await userService.login(email,password);setUser(user);toast.success('Login Successful');}catch(err){toast.error(err.response.data);}};const register=async data=>{try{const user=await userService.register(data);setUser(user);toast.success('Register Successful');}catch(err){toast.error(err.response.data);}};const logout=()=>{userService.logout();setUser(null);toast.success('Logout Successful');};const updateProfile=async user=>{const updatedUser=await userService.updateProfile(user);toast.success('Profile Update Was Successful');if(updatedUser)setUser(updatedUser);};const changePassword=async passwords=>{await userService.changePassword(passwords);logout();toast.success('Password Changed Successfully, Please Login Again!');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,register,updateProfile,changePassword},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["useState","createContext","useContext","userService","toast","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","getUser","login","email","password","success","err","error","response","data","register","logout","updateProfile","updatedUser","changePassword","passwords","Provider","value","useAuth"],"sources":["E:/Earth-surface-food/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, createContext, useContext } from 'react';\r\nimport * as userService from '../services/userService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(userService.getUser());\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const user = await userService.login(email, password);\r\n      setUser(user);\r\n      toast.success('Login Successful');\r\n    } catch (err) {\r\n      toast.error(err.response.data);\r\n    }\r\n  };\r\n\r\n  const register = async data => {\r\n    try {\r\n      const user = await userService.register(data);\r\n      setUser(user);\r\n      toast.success('Register Successful');\r\n    } catch (err) {\r\n      toast.error(err.response.data);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    userService.logout();\r\n    setUser(null);\r\n    toast.success('Logout Successful');\r\n  };\r\n\r\n  const updateProfile = async user => {\r\n    const updatedUser = await userService.updateProfile(user);\r\n    toast.success('Profile Update Was Successful');\r\n    if (updatedUser) setUser(updatedUser);\r\n  };\r\n\r\n  const changePassword = async passwords => {\r\n    await userService.changePassword(passwords);\r\n    logout();\r\n    toast.success('Password Changed Successfully, Please Login Again!');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ user, login, logout ,register,updateProfile,changePassword}}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,aAAa,CAAEC,UAAU,KAAQ,OAAO,CAC3D,MAAO,GAAK,CAAAC,WAAW,KAAM,yBAAyB,CACtD,OAASC,KAAK,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,IAAI,CAAC,CAEvC,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAACG,WAAW,CAACU,OAAO,CAAC,CAAC,CAAC,CAEvD,KAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvC,GAAI,CACF,KAAM,CAAAL,IAAI,CAAG,KAAM,CAAAR,WAAW,CAACW,KAAK,CAACC,KAAK,CAAEC,QAAQ,CAAC,CACrDJ,OAAO,CAACD,IAAI,CAAC,CACbP,KAAK,CAACa,OAAO,CAAC,kBAAkB,CAAC,CACnC,CAAE,MAAOC,GAAG,CAAE,CACZd,KAAK,CAACe,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACC,IAAI,CAAC,CAChC,CACF,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAD,IAAI,EAAI,CAC7B,GAAI,CACF,KAAM,CAAAV,IAAI,CAAG,KAAM,CAAAR,WAAW,CAACmB,QAAQ,CAACD,IAAI,CAAC,CAC7CT,OAAO,CAACD,IAAI,CAAC,CACbP,KAAK,CAACa,OAAO,CAAC,qBAAqB,CAAC,CACtC,CAAE,MAAOC,GAAG,CAAE,CACZd,KAAK,CAACe,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACC,IAAI,CAAC,CAChC,CACF,CAAC,CAED,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CACnBpB,WAAW,CAACoB,MAAM,CAAC,CAAC,CACpBX,OAAO,CAAC,IAAI,CAAC,CACbR,KAAK,CAACa,OAAO,CAAC,mBAAmB,CAAC,CACpC,CAAC,CAED,KAAM,CAAAO,aAAa,CAAG,KAAM,CAAAb,IAAI,EAAI,CAClC,KAAM,CAAAc,WAAW,CAAG,KAAM,CAAAtB,WAAW,CAACqB,aAAa,CAACb,IAAI,CAAC,CACzDP,KAAK,CAACa,OAAO,CAAC,+BAA+B,CAAC,CAC9C,GAAIQ,WAAW,CAAEb,OAAO,CAACa,WAAW,CAAC,CACvC,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAC,SAAS,EAAI,CACxC,KAAM,CAAAxB,WAAW,CAACuB,cAAc,CAACC,SAAS,CAAC,CAC3CJ,MAAM,CAAC,CAAC,CACRnB,KAAK,CAACa,OAAO,CAAC,oDAAoD,CAAC,CACrE,CAAC,CAED,mBACEX,IAAA,CAACC,WAAW,CAACqB,QAAQ,EACnBC,KAAK,CAAE,CAAElB,IAAI,CAAEG,KAAK,CAAES,MAAM,CAAED,QAAQ,CAACE,aAAa,CAACE,cAAc,CAAE,CAAAhB,QAAA,CAEpEA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAoB,OAAO,CAAGA,CAAA,GAAM5B,UAAU,CAACK,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}