{"ast":null,"code":"import{toast}from'react-toastify';import axios from'axios';export const uploadImage=async event=>{let toastId=null;const image=await getImage(event);if(!image)return null;const formData=new FormData();formData.append('image',image,image.name);const response=await axios.post('api/upload',formData,{onUploadProgress:_ref=>{let{progress}=_ref;if(toastId)toast.update(toastId,{progress});else toastId=toast.success('Uploading...',{progress});}});toast.dismiss(toastId);return response.data.imageUrl;};const getImage=async event=>{const files=event.target.files;if(!files||files.length<=0){toast.warning('Upload file is nott selected!','File Upload');return null;}const file=files[0];if(file.type!=='image/jpeg'){toast.error('Only JPG type is allowed','File Type Error');return null;}return file;};","map":{"version":3,"names":["toast","axios","uploadImage","event","toastId","image","getImage","formData","FormData","append","name","response","post","onUploadProgress","_ref","progress","update","success","dismiss","data","imageUrl","files","target","length","warning","file","type","error"],"sources":["E:/Earth-surface-food/frontend/src/services/uploadService.js"],"sourcesContent":["import { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nexport const uploadImage = async event => {\r\n  let toastId = null;\r\n\r\n  const image = await getImage(event);\r\n  if (!image) return null;\r\n\r\n  const formData = new FormData();\r\n  formData.append('image', image, image.name);\r\n  const response = await axios.post('api/upload', formData, {\r\n    onUploadProgress: ({ progress }) => {\r\n      if (toastId) toast.update(toastId, { progress });\r\n      else toastId = toast.success('Uploading...', { progress });\r\n    },\r\n  });\r\n  toast.dismiss(toastId);\r\n  return response.data.imageUrl;\r\n};\r\n\r\nconst getImage = async event => {\r\n  const files = event.target.files;\r\n\r\n  if (!files || files.length <= 0) {\r\n    toast.warning('Upload file is nott selected!', 'File Upload');\r\n    return null;\r\n  }\r\n\r\n  const file = files[0];\r\n\r\n  if (file.type !== 'image/jpeg') {\r\n    toast.error('Only JPG type is allowed', 'File Type Error');\r\n    return null;\r\n  }\r\n\r\n  return file;\r\n};\r\n"],"mappings":"AAAA,OAASA,KAAK,KAAQ,gBAAgB,CACtC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAM,CAAAC,KAAK,EAAI,CACxC,GAAI,CAAAC,OAAO,CAAG,IAAI,CAElB,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAC,QAAQ,CAACH,KAAK,CAAC,CACnC,GAAI,CAACE,KAAK,CAAE,MAAO,KAAI,CAEvB,KAAM,CAAAE,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEJ,KAAK,CAAEA,KAAK,CAACK,IAAI,CAAC,CAC3C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,KAAK,CAACW,IAAI,CAAC,YAAY,CAAEL,QAAQ,CAAE,CACxDM,gBAAgB,CAAEC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7B,GAAIV,OAAO,CAAEJ,KAAK,CAACgB,MAAM,CAACZ,OAAO,CAAE,CAAEW,QAAS,CAAC,CAAC,CAAC,IAC5C,CAAAX,OAAO,CAAGJ,KAAK,CAACiB,OAAO,CAAC,cAAc,CAAE,CAAEF,QAAS,CAAC,CAAC,CAC5D,CACF,CAAC,CAAC,CACFf,KAAK,CAACkB,OAAO,CAACd,OAAO,CAAC,CACtB,MAAO,CAAAO,QAAQ,CAACQ,IAAI,CAACC,QAAQ,CAC/B,CAAC,CAED,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAH,KAAK,EAAI,CAC9B,KAAM,CAAAkB,KAAK,CAAGlB,KAAK,CAACmB,MAAM,CAACD,KAAK,CAEhC,GAAI,CAACA,KAAK,EAAIA,KAAK,CAACE,MAAM,EAAI,CAAC,CAAE,CAC/BvB,KAAK,CAACwB,OAAO,CAAC,+BAA+B,CAAE,aAAa,CAAC,CAC7D,MAAO,KAAI,CACb,CAEA,KAAM,CAAAC,IAAI,CAAGJ,KAAK,CAAC,CAAC,CAAC,CAErB,GAAII,IAAI,CAACC,IAAI,GAAK,YAAY,CAAE,CAC9B1B,KAAK,CAAC2B,KAAK,CAAC,0BAA0B,CAAE,iBAAiB,CAAC,CAC1D,MAAO,KAAI,CACb,CAEA,MAAO,CAAAF,IAAI,CACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}