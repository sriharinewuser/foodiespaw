{"ast":null,"code":"import React,{useEffect}from'react';import{useForm}from'react-hook-form';import{getById,register,updateUser}from'../../services/userService';import{useParams}from'react-router-dom';import classes from'./userEdit.module.css';import Title from'../../components/Title/Title';import Input from'../../components/Input/Input';import{EMAIL}from'../../constants/patterns';import Button from'../../components/Button/Button';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function UserEditPage(){const{register,reset,handleSubmit,formState:{errors}}=useForm();const{userId}=useParams();const isEditMode=userId;useEffect(()=>{if(isEditMode)loadUser();},[userId]);const loadUser=async()=>{const user=await getById(userId);reset(user);};const submit=userData=>{updateUser(userData);};return/*#__PURE__*/_jsx(\"div\",{className:classes.container,children:/*#__PURE__*/_jsxs(\"div\",{className:classes.content,children:[/*#__PURE__*/_jsx(Title,{title:isEditMode?'Edit User':'Add User'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(submit),noValidate:true,children:[/*#__PURE__*/_jsx(Input,{label:\"Name\",...register('name',{required:true,minLength:3}),error:errors.name}),/*#__PURE__*/_jsx(Input,{label:\"Email\",...register('email',{required:true,pattern:EMAIL}),error:errors.email}),/*#__PURE__*/_jsx(Input,{label:\"Address\",...register('address',{required:true,minLength:5}),error:errors.address}),/*#__PURE__*/_jsx(Input,{label:\"Is Admin\",type:\"checkbox\",...register('isAdmin')}),/*#__PURE__*/_jsx(Button,{type:\"submit\"})]})]})});}","map":{"version":3,"names":["React","useEffect","useForm","getById","register","updateUser","useParams","classes","Title","Input","EMAIL","Button","jsx","_jsx","jsxs","_jsxs","UserEditPage","reset","handleSubmit","formState","errors","userId","isEditMode","loadUser","user","submit","userData","className","container","children","content","title","onSubmit","noValidate","label","required","minLength","error","name","pattern","email","address","type"],"sources":["E:/Earth-surface-food/frontend/src/pages/UserEdit/UserEditPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { getById, register, updateUser } from '../../services/userService';\r\nimport { useParams } from 'react-router-dom';\r\nimport classes from './userEdit.module.css';\r\nimport Title from '../../components/Title/Title';\r\nimport Input from '../../components/Input/Input';\r\nimport { EMAIL } from '../../constants/patterns';\r\nimport Button from '../../components/Button/Button';\r\n\r\nexport default function UserEditPage() {\r\n  const {\r\n    register,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const { userId } = useParams();\r\n  const isEditMode = userId;\r\n\r\n  useEffect(() => {\r\n    if (isEditMode) loadUser();\r\n  }, [userId]);\r\n\r\n  const loadUser = async () => {\r\n    const user = await getById(userId);\r\n    reset(user);\r\n  };\r\n\r\n  const submit = userData => {\r\n    updateUser(userData);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.content}>\r\n        <Title title={isEditMode ? 'Edit User' : 'Add User'} />\r\n        <form onSubmit={handleSubmit(submit)} noValidate>\r\n          <Input\r\n            label=\"Name\"\r\n            {...register('name', { required: true, minLength: 3 })}\r\n            error={errors.name}\r\n          />\r\n          <Input\r\n            label=\"Email\"\r\n            {...register('email', { required: true, pattern: EMAIL })}\r\n            error={errors.email}\r\n          />\r\n          <Input\r\n            label=\"Address\"\r\n            {...register('address', { required: true, minLength: 5 })}\r\n            error={errors.address}\r\n          />\r\n\r\n          <Input label=\"Is Admin\" type=\"checkbox\" {...register('isAdmin')} />\r\n          <Button type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,OAAO,KAAQ,iBAAiB,CACzC,OAASC,OAAO,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,4BAA4B,CAC1E,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAC3C,MAAO,CAAAC,KAAK,KAAM,8BAA8B,CAChD,MAAO,CAAAC,KAAK,KAAM,8BAA8B,CAChD,OAASC,KAAK,KAAQ,0BAA0B,CAChD,MAAO,CAAAC,MAAM,KAAM,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,cAAe,SAAS,CAAAC,YAAYA,CAAA,CAAG,CACrC,KAAM,CACJZ,QAAQ,CACRa,KAAK,CACLC,YAAY,CACZC,SAAS,CAAE,CAAEC,MAAO,CACtB,CAAC,CAAGlB,OAAO,CAAC,CAAC,CAEb,KAAM,CAAEmB,MAAO,CAAC,CAAGf,SAAS,CAAC,CAAC,CAC9B,KAAM,CAAAgB,UAAU,CAAGD,MAAM,CAEzBpB,SAAS,CAAC,IAAM,CACd,GAAIqB,UAAU,CAAEC,QAAQ,CAAC,CAAC,CAC5B,CAAC,CAAE,CAACF,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAE,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAArB,OAAO,CAACkB,MAAM,CAAC,CAClCJ,KAAK,CAACO,IAAI,CAAC,CACb,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGC,QAAQ,EAAI,CACzBrB,UAAU,CAACqB,QAAQ,CAAC,CACtB,CAAC,CAED,mBACEb,IAAA,QAAKc,SAAS,CAAEpB,OAAO,CAACqB,SAAU,CAAAC,QAAA,cAChCd,KAAA,QAAKY,SAAS,CAAEpB,OAAO,CAACuB,OAAQ,CAAAD,QAAA,eAC9BhB,IAAA,CAACL,KAAK,EAACuB,KAAK,CAAET,UAAU,CAAG,WAAW,CAAG,UAAW,CAAE,CAAC,cACvDP,KAAA,SAAMiB,QAAQ,CAAEd,YAAY,CAACO,MAAM,CAAE,CAACQ,UAAU,MAAAJ,QAAA,eAC9ChB,IAAA,CAACJ,KAAK,EACJyB,KAAK,CAAC,MAAM,IACR9B,QAAQ,CAAC,MAAM,CAAE,CAAE+B,QAAQ,CAAE,IAAI,CAAEC,SAAS,CAAE,CAAE,CAAC,CAAC,CACtDC,KAAK,CAAEjB,MAAM,CAACkB,IAAK,CACpB,CAAC,cACFzB,IAAA,CAACJ,KAAK,EACJyB,KAAK,CAAC,OAAO,IACT9B,QAAQ,CAAC,OAAO,CAAE,CAAE+B,QAAQ,CAAE,IAAI,CAAEI,OAAO,CAAE7B,KAAM,CAAC,CAAC,CACzD2B,KAAK,CAAEjB,MAAM,CAACoB,KAAM,CACrB,CAAC,cACF3B,IAAA,CAACJ,KAAK,EACJyB,KAAK,CAAC,SAAS,IACX9B,QAAQ,CAAC,SAAS,CAAE,CAAE+B,QAAQ,CAAE,IAAI,CAAEC,SAAS,CAAE,CAAE,CAAC,CAAC,CACzDC,KAAK,CAAEjB,MAAM,CAACqB,OAAQ,CACvB,CAAC,cAEF5B,IAAA,CAACJ,KAAK,EAACyB,KAAK,CAAC,UAAU,CAACQ,IAAI,CAAC,UAAU,IAAKtC,QAAQ,CAAC,SAAS,CAAC,CAAG,CAAC,cACnES,IAAA,CAACF,MAAM,EAAC+B,IAAI,CAAC,QAAQ,CAAE,CAAC,EACpB,CAAC,EACJ,CAAC,CACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}